"""feat: created and removed tables to make blog creation seamless

Revision ID: ac40717ed2e3
Revises: a816988f15d5
Create Date: 2024-01-22 20:19:14.914125

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ac40717ed2e3'
down_revision = 'a816988f15d5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('content_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_tags', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('author_id')
    )
    op.create_table('content_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('author_id')
    )
    op.create_table('blog_content_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('blog_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['blog_id'], ['blogs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('blog_id')
    )
    op.drop_table('blog_images')
    with op.batch_alter_table('authors', schema=None) as batch_op:
        batch_op.drop_column('is_admin')

    with op.batch_alter_table('blog_contents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('content_type', sa.String(), nullable=False))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('blog_contents', schema=None) as batch_op:
        batch_op.drop_column('content_type')

    with op.batch_alter_table('authors', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=False))

    op.create_table('blog_images',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('image', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('blod_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['blod_id'], ['blogs.id'], name='blog_images_blod_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='blog_images_pkey'),
    sa.UniqueConstraint('blod_id', name='blog_images_blod_id_key')
    )
    op.drop_table('blog_content_tags')
    op.drop_table('content_types')
    op.drop_table('content_tags')
    # ### end Alembic commands ###
